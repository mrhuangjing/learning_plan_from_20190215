// [编程题] 翻转数列
// 时间限制：1秒

// 空间限制：32768K

// 小Q定义了一种数列称为翻转数列:
// 给定整数n和m, 满足n能被2m整除。对于一串连续递增整数数列1, 2, 3, 4..., 每隔m个符号翻转一次, 最初符号为'-';。
// 例如n = 8, m = 2, 数列就是: -1, -2, +3, +4, -5, -6, +7, +8.
// 而n = 4, m = 1, 数列就是: -1, +2, -3, + 4.
// 小Q现在希望你能帮他算算前n项和为多少。

// 输入描述:
// 输入包括两个整数n和m(2 <= n <= 109, 1 <= m), 并且满足n能被2m整除。

// 输出描述:
// 输出一个整数, 表示前n项和。

// 输入例子1:
// 8 2

// 输出例子1:
// 8

while(line=readline()){
    var lines = line.split(' ');
    var n = parseInt(lines[0]);
    var m = parseInt(lines[1]);
}

//方法一，通过率40% 因为题目中n的范围很大，可能达到10^9，通过循环计算，时间会超出1s,所以对于n很大的情况，不能用循环，应该找规律
var sum = 0, flag = -1;
for(var i = 1; i <= n; i++) {
       sum += flag*i;
       if (i % m == 0) {
        flag = -flag;
    }
}
print(sum);

//方法二，通过率100%
print(parseInt(n/(2*m))*(m*m))